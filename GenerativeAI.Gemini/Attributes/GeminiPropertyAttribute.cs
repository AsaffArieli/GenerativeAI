using GenerativeAI.Gemini.Enums;

namespace GenerativeAI.Gemini.Attributes
{
    /// <summary>
    /// Defines a property in the Gemini structured prompt schema.
    /// Apply this attribute to a property, field, class, enum, or interface to specify its schema metadata.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Class | AttributeTargets.Enum | AttributeTargets.Interface, AllowMultiple = false)]
    public class GeminiPropertyAttribute : Attribute
    {
        /// <summary>
        /// The name of the property in the schema. If not set, the member's name is used.
        /// </summary>
        public string? Name { get; set; }

        /// <summary>
        /// A human-readable title for the property.
        /// </summary>
        public string? Title { get; set; }

        /// <summary>
        /// Describes how the Gemini AI model should interpret and populate this field from the schema.
        /// This guides the model's behavior when generating or extracting values for this property.
        /// </summary>
        public string? Description { get; set; }

        /// <summary>
        /// The data format of the property, using OpenAPI-compatible format keywords.
        /// </summary>
        public GeminiPropertyFormatOption Format { get; set; } = GeminiPropertyFormatOption.NotSpecified;

        /// <summary>
        /// Indicates whether the property is required in the schema.
        /// </summary>
        public bool Required { get; set; }

        /// <summary>
        /// A regular expression pattern that the property's value must match, if specified.
        /// </summary>
        public string? RegexPattern { get; set; }

        /// <summary>
        /// The data type of the property.
        /// </summary>
        public GeminiSchemaFieldType Type { get; set; } = GeminiSchemaFieldType.AutoGenerated;

        /// <summary>
        /// Specifies the nullability of the property.
        /// </summary>
        public GeminiPropertyNullOption Nullable { get; set; } = GeminiPropertyNullOption.NotSpecified;

    }
}
